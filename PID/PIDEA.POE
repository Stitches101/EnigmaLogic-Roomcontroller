PROGRAM PIDEA
VAR_EXTERNAL
SI01 : real;
SI02 : real;
SI03 : real;
SI04 : real;

PI01 : real;
PI02 : real;

END_VAR


VAR
PID_CONTROL : PIDFB ; (* The functionblock type: PIDFB *)
Output_4 : REAL ;
Result : int;
END_VAR
(**  **)
(**  **)
(**  **)
(**  **)
(** PID_CONTROL.measurement := WORD_TO_REAL(GetRegisterF(RegNumber:=507))*10.0; {*AI08 == EA Volume 0-10V)*} **)
	(* assign - Stmt *)
	LD 507
	GetRegisterF 
	WORD_TO_REAL 
	MUL 10.0
	ST PID_CONTROL.measurement

(** PID_CONTROL.setpoint := PI02; {*PIDGLOBAL)*} **)
	(* assign - Stmt *)
	LD PI02
	ST PID_CONTROL.setpoint

(** PID_CONTROL.stages := 1; {* INT, between 1 and 6 *} **)
	(* assign - Stmt *)
	LD 1
	ST PID_CONTROL.stages

(** PID_CONTROL.balance := 0; {* INT, between 0 and 6 *} **)
	(* assign - Stmt *)
	LD 0
	ST PID_CONTROL.balance

(** PID_CONTROL.deadzone := 50.0 ; {* REAL *} **)
	(* assign - Stmt *)
	LD 50.0
	ST PID_CONTROL.deadzone

(** PID_CONTROL.comfort := 0.1; {* REAL *} **)
	(* assign - Stmt *)
	LD 0.1
	ST PID_CONTROL.comfort

(** PID_CONTROL.min1 := 0; {* INT, between 0 and 100 *} **)
	(* assign - Stmt *)
	LD 0
	ST PID_CONTROL.min1

(** PID_CONTROL.max1 := 100; {* INT, between 0 and 100 *} **)
	(* assign - Stmt *)
	LD 100
	ST PID_CONTROL.max1

(** PID_CONTROL.pband1 := 100.0; {* REAL, bigger than 0 *} **)
	(* assign - Stmt *)
	LD 100.0
	ST PID_CONTROL.pband1

(** PID_CONTROL.iTime := 60; {* INT, seconds, bigger than 0 *} **)
	(* assign - Stmt *)
	LD 60
	ST PID_CONTROL.iTime

(** PID_CONTROL.dTime := 0; {* INT, seconds *} **)
	(* assign - Stmt *)
	LD 0
	ST PID_CONTROL.dTime

(** {* calling the execution of the functionblock *} **)
(** PID_CONTROL(); **)
	(* call - Stmt *)
	CAL PID_CONTROL

(** {* now we can use the output values *} **)
(**  **)
(** Output_4 := PID_CONTROL.out1 ; {* returns a REAL *} **)
	(* assign - Stmt *)
	LD PID_CONTROL.out1
	ST Output_4

(** Result := SetAnalogOutputF(Number:=4, Value := Output_4); **)
	(* assign - Stmt *)
	LD 4
	SetAnalogOutputF Output_4
	ST Result


END_PROGRAM